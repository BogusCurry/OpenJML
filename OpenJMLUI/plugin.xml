<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
        <!-- TODO: Things to be done:
                - get RAC decorator working
                - fix the enablement of the remaining popup menu items / check all enablements
                - define a submenu for the popup menu items
                - look into using org.eclipse.ui.menus, which has
                replaced the menchanisms used here, since 3.3
                - there are a bunch of FIXMEs
          -->
          
  <!-- This defines a builder used to do JML checking as part of the
		Eclipse compilation process.  The unqualified id appears
		to be implicitly prefixed by the plugin id as defined in
		the Activator and in the manifest.
		-->
  <extension
         id="JMLBuilder"
         name="JML Builder"
         point="org.eclipse.core.resources.builders">
    <builder
            hasNature="true">
      <run class="org.jmlspecs.openjml.eclipse.JMLBuilder"/>
    </builder>
  </extension>
   
  <!-- An Eclipse Nature that designates a Java project as one to
   	which JML tools can be applied.  It also controls the builder.
   	The unqualified id appears
    to be implicitly prefixed by the plugin id as defined in
    the Activator and in the manifest.
  -->
  <extension
         id="JMLNatureID"
         name="JML Nature"
         point="org.eclipse.core.resources.natures">
    <requires-nature id="org.eclipse.jdt.core.javanature"/>
    <runtime>
      <run class="org.jmlspecs.openjml.eclipse.JMLNature"/>
    </runtime>
    <builder
            id="org.jmlspecs.OpenJMLUI.JMLBuilder">
    </builder>
    <!-- FIXME - what about parameter or content-type ? -->
  </extension>
   
  <!-- This decorator is applied to Java projects to indicate whether
	they have a JML Nature (with decorator) or not (no decorator).
	NOTE: Per the code in PopupActions.java the decorator id must
	be PLUGIN_ID + ".JMLDecoration"
	-->
  <extension
         point="org.eclipse.ui.decorators">
    <decorator
            lightweight="true"
            location="TOP_RIGHT"
            label="JML"
            icon="icons/JMLSmall.png"
            state="true"
            id="org.jmlspecs.OpenJMLUI.JMLDecoration">
       <description>
            JML nature is enabled for this project
       </description>
       <enablement>
        	<and>
                <objectState name="nature" value="org.jmlspecs.OpenJMLUI.JMLNatureID"/>
                <objectClass name="org.eclipse.jdt.core.IJavaProject"/> 
             </and>
       </enablement>
    </decorator>
  </extension>

   <!-- This adds the OpenJML preference page -->
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            class="org.jmlspecs.openjml.eclipse.SettingsPage"
            id="org.jmlspecs.openjml.eclipse.SettingsPage"
            name="%PreferencePage">
      </page>
      <page
            class="org.jmlspecs.openjml.eclipse.PathsPage"
            id="org.jmlspecs.openjml.eclipse.PathsPage"
            category="org.jmlspecs.openjml.eclipse.SettingsPage"
            name="%PreferencePage.Paths">
      </page>
      <page
            class="org.jmlspecs.openjml.eclipse.SolversPage"
            id="org.jmlspecs.openjml.eclipse.SolversPage"
            category="org.jmlspecs.openjml.eclipse.SettingsPage"
            name="%PreferencePage.Solvers">
      </page>
   </extension>
   
  <!-- The following set of extensions add various menu items to the
  	popup menus that appear when right-clicking on items in the
  	Package Explorer. They appear in the UI in reverse order of how they are
  	listed here.
  	 -->

<!-- Don't know what locationURI to use - FIXME  	 
  <extension point="org.eclipse.ui.menus">
  	  <menuContribution
            locationURI="popup:org.eclipse.ui.examples.contributions.view?after=additions">
         <command
               id="JMLUI.disableNatureAction"
               commandId="org.jmlspecs.openjml.eclipse.DisableNature"
               label="Disable Auto JML Checking"
               enablesFor="+"
               >
         </command>
         <command
               id="JMLUI.enableNatureAction"
               commandId="org.jmlspecs.openjml.eclipse.EnableNature"
               label="Enable Auto JML Checking"
               enablesFor="+"
               >
         </command>
      </menuContribution>
  </extension>
-->

  <extension
         point="org.eclipse.ui.popupMenus">
    <objectContribution
            adaptable="true"
            objectClass="java.lang.Object"
            nameFilter="*"
            id="JMLUI.container">
            <!-- FIXME: The items in this first objectContribution need more specific enablements -->
       <action
               label="Delete RAC files"
               class="org.jmlspecs.openjml.eclipse.PopupActions$ClearForRAC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.clearForRAC">
       </action>
       <action
               label="Disable for RAC"
               class="org.jmlspecs.openjml.eclipse.PopupActions$DisableForRAC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.disableForRAC">
       </action>
       <action
               label="Mark for RAC"
               class="org.jmlspecs.openjml.eclipse.PopupActions$EnableForRAC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.enableForRAC">
       </action>
       <action
               label="Generate JML docs"
               class="org.jmlspecs.openjml.eclipse.PopupActions$JmlDoc"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.jmldocAction">
       </action>
       <action
               label="Show JML classpath"
               class="org.jmlspecs.openjml.eclipse.PopupActions$ClassPath"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.classpathAction">
       </action>
       <action
               label="Edit JML specs path"
               class="org.jmlspecs.openjml.eclipse.PopupActions$SpecsPath"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.specspathAction">
       </action>
       <action
               label="Add to JML specs path"
               class="org.jmlspecs.openjml.eclipse.PopupActions$AddToSpecsPath"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.addspecspathAction">
       </action>
       <action
               label="Remove from JML specs path"
               class="org.jmlspecs.openjml.eclipse.PopupActions$RemoveFromSpecsPath"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.removespecspathAction">
       </action>
    </objectContribution>
    <!-- These context menu items are enabled for methods -->
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.jdt.core.IMethod"
            nameFilter="*"
            id="JMLUI.contribution3K">
       <action
               label="Show JML proof information"
               class="org.jmlspecs.openjml.eclipse.PopupActions$ProofInformation"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.showProofInformation">
       </action>
    </objectContribution>
    <!-- These context menu items are enabled for any Java element -->
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.jdt.core.IJavaElement"
            nameFilter="*"
            id="JMLUI.contribution3">
       <action
               label="Show Specifications"
               class="org.jmlspecs.openjml.eclipse.PopupActions$ShowSpecs"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.showSpecsAction1">
       </action>
    </objectContribution>
    <!-- These context menu items are enabled for Java projects -->
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.jdt.core.IJavaProject"
            nameFilter="*"
            id="JMLUI.contribution1">
       <action
               label="Disable Auto JML Checking"
               class="org.jmlspecs.openjml.eclipse.PopupActions$DisableNature"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.removeNatureAction">
       </action>
       <action
               label="Enable Auto JML Checking"
               class="org.jmlspecs.openjml.eclipse.PopupActions$EnableNature"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.addNatureAction">
       </action>
    </objectContribution>

    <!-- These context menu items are enabled for any working set -->
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.ui.IWorkingSet"
            nameFilter="*"
            id="JMLUI.contribution1WS">
       <action
               label="Disable Auto JML Checking"
               class="org.jmlspecs.openjml.eclipse.PopupActions$DisableNature"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.removeNatureActionWS">
       </action>
       <action
               label="Enable Auto JML Checking"
               class="org.jmlspecs.openjml.eclipse.PopupActions$EnableNature"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.addNatureActionWS">
       </action>
    </objectContribution>
    <!-- These context menu items are enabled for any Resource -->
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.core.resources.IResource"
            nameFilter="*"
            id="JMLUI.contributionE">
       <action
               label="Open Specifications Editor"
               class="org.jmlspecs.openjml.eclipse.PopupActions$SpecsEditor"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.specsEditor">
       </action>
    </objectContribution>
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.core.resources.IResource"
            nameFilter="*"
            id="JMLUI.contribution4">
       <action
               label="Delete JML markers"
               class="org.jmlspecs.openjml.eclipse.PopupActions$DeleteMarkers"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.deleteMarkerAction">
       </action>
       <action
               label="Compile RAC"
               class="org.jmlspecs.openjml.eclipse.PopupActions$RAC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkRACAction">
       </action>
    </objectContribution>
    <!-- These context menu items are enabled for any working set -->
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.ui.IWorkingSet"
            nameFilter="*"
            id="JMLUI.contribution4WS">
       <action
               label="Delete JML markers"
               class="org.jmlspecs.openjml.eclipse.PopupActions$DeleteMarkers"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.deleteMarkerActionWS">
       </action>
       <action
               label="Compile RAC"
               class="org.jmlspecs.openjml.eclipse.PopupActions$RAC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkRACActionWS">
       </action>
    </objectContribution>
  </extension>
  <!--  FIXME - something like this would simplify this file. 
  <extension
         point="org.eclipse.ui.popupMenus">
    <objectContribution
            adaptable="true"
            nameFilter="*"
            id="JMLUI.contribution6M">
       <action
               label="Static checks"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckESC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkESCActionM">
          <enablement>
                <or>
                <objectClass name="org.eclipse.jdt.core.IMethod"/> 
                <objectClass name="org.eclipse.jdt.core.IType"/> 
                <objectClass name="org.eclipse.jdt.core.IResource"/> 
                <objectClass name="org.eclipse.jdt.core.IWorkingSet"/> 
             </or>
       </enablement>
       </action>
    </objectContribution>
  </extension>
  -->
  <extension
         point="org.eclipse.ui.popupMenus">
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.jdt.core.IMethod"
            nameFilter="*"
            id="JMLUI.contribution6M">
       <action
               label="Static check (ESC)"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckESC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkESCActionM">
       </action>
    </objectContribution>
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.jdt.core.IType"
            nameFilter="*"
            id="JMLUI.contribution6T">
       <action
               label="Static check (ESC)"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckESC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkESCActionT">
       </action>
    </objectContribution>
  </extension>
  <!-- An IType adapts to be the containing IResource; adaptable is set false,
  otherwise a Class in the PackageNavigator will have two entries in its popup
  menu. But I wonder what other things that would adapt to be an IResource are
  thereby not enabled.  This could be smarter - FIXME.  -->
  <extension
         point="org.eclipse.ui.popupMenus">
    <objectContribution
            adaptable="false"
            objectClass="org.eclipse.core.resources.IResource"
            nameFilter="*"
            id="JMLUI.contribution6">
       <action
               label="Static check (ESC)"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckESC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkESCAction">
       </action>
    </objectContribution>
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.ui.IWorkingSet"
            nameFilter="*"
            id="JMLUI.contribution6WS">
       <action
               label="Static check (ESC)"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckESC"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkESCActionWS">
       </action>
    </objectContribution>
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.core.resources.IResource"
            nameFilter="*"
            id="JMLUI.contribution7">
       <action
               label="JML type-check"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckJML"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkJMLAction">
       </action>
    </objectContribution>
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.ui.IWorkingSet"
            nameFilter="*"
            id="JMLUI.contribution5WS">
       <action
               label="JML type-check"
               class="org.jmlspecs.openjml.eclipse.PopupActions$CheckJML"
               menubarPath="JML"
               enablesFor="+"
               id="JMLUI.checkJMLActionWS">
       </action>
    </objectContribution>
  </extension>

<!-- This next section creates the menu items on the Eclipse main menu -->
<!-- FIXME - I think all the menu tooltips are ignored; is style=push the default? -->
<extension
         point="org.eclipse.ui.menus">
      <menuContribution
             allPopups="false"
             locationURI="menu:org.eclipse.ui.main.menu">
          <menu
                label="%mainmenu.label"
                tooltip="%mainmenu.tooltip">
             <command
               label="JML type-check"
               tooltip="Type-checks JML in selected objects"
               icon="icons/jml-logo-16x16.png"
               id="org.jmlspecs.openjml.eclipse.MenuActions.CheckJML"
               commandId="org.jmlspecs.eclipse.commands.CheckJML">
             </command>
             <command
               label="Static check (ESC)"
               tooltip="Performs JML static checks for selected objects"
               id="org.jmlspecs.openjml.eclipse.MenuActions.CheckESC"
               commandId="org.jmlspecs.eclipse.commands.CheckESC">
             </command>
             <command
               label="Enable Auto JML Checking"
               tooltip="Enables selected objects for auto JML checking"
               id="org.jmlspecs.openjml.eclipse.MenuActions.EnableJML"
               commandId="org.jmlspecs.eclipse.commands.EnableJML">
             </command>
             <command
               label="Disable Auto JML Checking"
               tooltip="Disables selected objects for auto JML checking"
               id="org.jmlspecs.openjml.eclipse.MenuActions.DisableJML"
               commandId="org.jmlspecs.eclipse.commands.DisableJML">
             </command>
             <command
               label="Delete JML Markers"
               tooltip="Clears any JML markers in the selected object"
               id="org.jmlspecs.openjml.eclipse.MenuActions.DeleteJMLMarkers"
               commandId="org.jmlspecs.eclipse.commands.DeleteJMLMarkers">
             </command>

             <command
               label="Compile RAC"
               tooltip="Compiles JML runtime checks for selected objects"
               id="org.jmlspecs.openjml.eclipse.MenuActions.RAC"
               commandId="org.jmlspecs.eclipse.commands.RAC">
             </command>
             <command
               label="Mark for RAC"
               tooltip="Marks selected resources to be compiled with runtime checks"
               id="org.jmlspecs.openjml.eclipse.MenuActions.EnableForRAC"
               commandId="org.jmlspecs.eclipse.commands.EnableForRAC">
             </command>

             <command
               label="Delete RAC files"
               tooltip="Deletes RAC-compiled class files for selected resources"
               id="org.jmlspecs.openjml.eclipse.MenuActions.ClearForRAC"
               commandId="org.jmlspecs.eclipse.commands.ClearForRAC"
               style="push">
             </command>
             <command
               label="Enable for RAC"
               tooltip="Enables selected resources to be compiled with runtime checks"
               id="org.jmlspecs.openjml.eclipse.MenuActions.EnableForRAC"
               commandId="org.jmlspecs.eclipse.commands.EnableForRAC"
               style="push">
             </command>
             <command
               label="Disable for RAC"
               tooltip="Disables selected resources from being compiled with runtime checks"
               id="org.jmlspecs.openjml.eclipse.MenuActions.DisableForRAC"
               commandId="org.jmlspecs.eclipse.commands.DisableForRAC"
               style="push">
             </command>
             
             <command
               label="Generate JML docs"
               tooltip="Generates javadoc pages containing JML specifications"
               id="org.jmlspecs.openjml.eclipse.MenuActions.JmlDoc"
               commandId="org.jmlspecs.eclipse.commands.JmlDoc">
             </command>
             
             <command
               label="Show JML classpath"
               tooltip="Shows JML's class path"
               id="org.jmlspecs.openjml.eclipse.MenuActions.ClassPath"
               commandId="org.jmlspecs.eclipse.commands.ClassPath">
             </command>
             <command
               label="Edit JML Specs Path"
               tooltip="Edits the specifications directory path"
               id="org.jmlspecs.openjml.eclipse.MenuActions.SpecsPath"
               commandId="org.jmlspecs.eclipse.commands.EditSpecsPath">
             </command>
             <command
               label="Remove from JML Specs Path"
               tooltip="Removes folder from the specifications directory path"
               id="org.jmlspecs.openjml.eclipse.MenuActions.RemoveFromSpecsPath"
               commandId="org.jmlspecs.eclipse.commands.RemoveFromSpecsPath">
             </command>
             <command
               label="Add to JML Specs Path"
               tooltip="Adds folder to the specifications directory path"
               id="org.jmlspecs.openjml.eclipse.MenuActions.AddToSpecsPath"
               commandId="org.jmlspecs.eclipse.commands.AddToSpecsPath">
             </command>
             <command
               label="Show counterexample value"
               tooltip="Shows the value of an expression in the counterexample"
               id="org.jmlspecs.openjml.eclipse.MenuActions.ShowCounterexampleValue"
               commandId="org.jmlspecs.eclipse.commands.ShowCounterexampleValue">
             </command>
             <command
               label="Show Proof Information"
               tooltip="Shows proof information for the selected method"
               id="org.jmlspecs.openjml.eclipse.MenuActions.ProofInformation"
               commandId="org.jmlspecs.eclipse.commands.ProofInformation">
             </command>
             <command
               label="Show Specifications"
               tooltip="Shows the specifications of the selected object"
               id="org.jmlspecs.openjml.eclipse.MenuActions.ShowSpecs"
               commandId="org.jmlspecs.eclipse.commands.ShowSpecs">
             </command>
             <command
               label="Open Specifications Editor"
               tooltip="Opens a specification file editor for the selected object"
               id="org.jmlspecs.openjml.eclipse.MenuActions.SpecsEditor"
               commandId="org.jmlspecs.eclipse.commands.SpecsEditor">
             </command>
          </menu>
       </menuContribution>
 </extension>
 
 <extension
         point="org.eclipse.ui.menus">
      <!-- These declarations add items to the main toolbar --> 
      <menuContribution
            allPopups="true"
            locationURI="toolbar:org.eclipse.ui.main.toolbar">
          <toolbar id="org.jmlspecs.eclipse.openjml.toolbar">
             <command
                   commandId="org.jmlspecs.eclipse.commands.CheckJML"
                   icon="icons/jml-logo-16x16.png"
                   id="org.jmlspecs.openjml.eclipse.MenuActions.CheckJML"
                   label="JML type-check"
                   style="push"
                   tooltip="Type-checks JML in selected objects">
             </command>
             <command
                   commandId="org.jmlspecs.eclipse.commands.CheckESC"
                   id="org.jmlspecs.openjml.eclipse.MenuActions.CheckESC"
                   label="ESC"
                   style="push"
                   tooltip="Performs JML static checks for selected objects">
             </command>
             <command
                   commandId="org.jmlspecs.eclipse.commands.RAC"
                   id="org.jmlspecs.openjml.eclipse.MenuActions.RAC"
                   label="RAC"
                   style="push"
                   tooltip="Compiles JML runtime checks for selected objects">
             </command>


           </toolbar>
       </menuContribution>
 </extension>
 
   
  <!-- This defines a new marker type -->
  <!-- The attribute is used to associate additional information with the marker (FIXME - is it used?) -->  
  <extension
         id="JMLProblem"
         name="JML Problem"
         point="org.eclipse.core.resources.markers">
    <super type="org.eclipse.jdt.core.problem"/>
    <persistent value="true"/>
    <attribute name="declarationInfo"/>
  </extension>

  <extension
         id="JMLESCProblem"
         name="JML Static Check Problem"
         point="org.eclipse.core.resources.markers">
    <super type="org.eclipse.jdt.core.problem"/>
    <persistent value="true"/>
    <attribute name="declarationInfo"/>
  </extension>

  <extension
         id="JMLHighlight"
         name="JML Highlight"
         point="org.eclipse.core.resources.markers">
    <super type="org.eclipse.jdt.core.textmarker"/>
    <persistent value="true"/>
  </extension>

  <extension
         id="JMLHighlightTrue"
         name="JML Highlight"
         point="org.eclipse.core.resources.markers">
    <super type="org.eclipse.jdt.core.textmarker"/>
    <persistent value="true"/>
  </extension>

  <extension
         id="JMLHighlightFalse"
         name="JML Highlight"
         point="org.eclipse.core.resources.markers">
    <super type="org.eclipse.jdt.core.textmarker"/>
    <persistent value="true"/>
  </extension>

  <extension
         id="JMLHighlightException"
         name="JML Highlight"
         point="org.eclipse.core.resources.markers">
    <super type="org.eclipse.jdt.core.textmarker"/>
    <persistent value="true"/>
  </extension>

<!-- FIXME - is the declarationInfo attribute actually used ? -->
	
  <!-- This connects the JML markers to editor annotations  -->
  <!--  NOTE: Per the code in Utils the marker type must
        be PLUGIN_ID + ".JMLProblem" or PLUGIN_ID + ".JMLESCProblem"
  -->
  <!-- Note: The type declarations used to have an attribute
  			super="org.eclipse.ui.workbench.texteditor.error"
  	   (there may be a corresponding one for warning as well).  With that
  	   used, the display would not respond to changes in the preferences.  The super line
  	   needed to be removed for this behavior to get enabled.  I'm not
  	   actually sure what benefit the super attribute provides (and thus
  	   what functionality is broken by its removal. FIXME) -->
  				
  <extension
         point="org.eclipse.ui.editors.annotationTypes"
         id="JMLAnnotation">
    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLHighlight"
            name="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotation"
            >
    </type>

    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLHighlightTrue"
            name="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotationTrue"
            >
    </type>
    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLHighlightFalse"
            name="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotationFalse"
            >
    </type>
    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLHighlightException"
            name="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotationException"
            >
    </type>

    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLESCProblem"
            name="org.jmlspecs.OpenJMLUI.ESCProblemAnnotation"
            markerSeverity="1"
            >
    </type>
    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLProblem"
            name="org.jmlspecs.OpenJMLUI.JMLProblemAnnotation"
            markerSeverity="2"
            >
    </type>
    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLProblem"
            name="org.jmlspecs.OpenJMLUI.JMLWarningAnnotation"
            markerSeverity="1"
                        >
    </type>
    <type
            markerType="org.jmlspecs.OpenJMLUI.JMLProblem"
            name="org.jmlspecs.OpenJMLUI.JMLNoteAnnotation"
            markerSeverity="0"
                        >
    </type>
  </extension>


  <!-- Provides the image for the annotations  -->
  <!-- NOTE: the annotationType must match the name, not the id, of the
  		annotationType defined above -->
  <extension
         point="org.eclipse.ui.editors.markerAnnotationSpecification">
    <specification
            annotationType="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotation"
            label="JML Execution Path"
            overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orphKey"
            verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrphKey"
            highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrphKey"
            textPreferenceKey="org.jmlspecs.openjml.eclipse.trphKey"
            colorPreferenceKey="org.jmlspecs.openjml.eclipse.crphKey"
            colorPreferenceValue="255,255,128"
            textPreferenceValue="false"
            overviewRulerPreferenceValue="false"
            verticalRulerPreferenceValue="false"
            highlightPreferenceValue="true"
            presentationLayer="2"
            >
    </specification>

    <specification
            annotationType="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotationTrue"
            label="JML Execution Path - True"
            overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orphtKey"
            verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrphtKey"
            highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrphtKey"
            textPreferenceKey="org.jmlspecs.openjml.eclipse.trphtKey"
            colorPreferenceKey="org.jmlspecs.openjml.eclipse.crphtKey"
            colorPreferenceValue="128,255,128"
            textPreferenceValue="false"
            overviewRulerPreferenceValue="false"
            verticalRulerPreferenceValue="false"
            highlightPreferenceValue="true"
            presentationLayer="2"
            >
    </specification>
    <specification
            annotationType="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotationFalse"
            label="JML Execution Path - False"
            overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orphfKey"
            verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrphfKey"
            highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrphfKey"
            textPreferenceKey="org.jmlspecs.openjml.eclipse.trphfKey"
            colorPreferenceKey="org.jmlspecs.openjml.eclipse.crphfKey"
            colorPreferenceValue="255,128,128"
            textPreferenceValue="false"
            overviewRulerPreferenceValue="false"
            verticalRulerPreferenceValue="false"
            highlightPreferenceValue="true"
            presentationLayer="2"
            >
    </specification>
    <specification
            annotationType="org.jmlspecs.OpenJMLUI.ESCHighlightAnnotationException"
            label="JML Execution Path - Exception"
            overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orpheKey"
            verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrpheKey"
            highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrpheKey"
            textPreferenceKey="org.jmlspecs.openjml.eclipse.trpheKey"
            colorPreferenceKey="org.jmlspecs.openjml.eclipse.crpheKey"
            colorPreferenceValue="255,192,64"
            textPreferenceValue="false"
            overviewRulerPreferenceValue="false"
            verticalRulerPreferenceValue="false"
            highlightPreferenceValue="true"
            presentationLayer="2"
            >
    </specification>

  </extension>
  <extension
         point="org.eclipse.ui.editors.markerAnnotationSpecification">
    <specification
          annotationType="org.jmlspecs.OpenJMLUI.ESCProblemAnnotation"
          colorPreferenceKey="org.jmlspecs.openjml.eclipse.crpeKey"
          colorPreferenceValue="255,128,0"
          highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrpeKey"
          highlightPreferenceValue="true"
          icon="icons/jml_orange.gif"
          includeOnPreferencePage="true"
          label="JML Static Check Warning"
          overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orpeKey"
          overviewRulerPreferenceValue="true"
          presentationLayer="3"
          textPreferenceKey="org.jmlspecs.openjml.eclipse.trpeKey"
          textPreferenceValue="true"
          verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrpeKey"
          verticalRulerPreferenceValue="true">
    </specification>
    <specification
          annotationType="org.jmlspecs.OpenJMLUI.JMLProblemAnnotation"
          colorPreferenceKey="org.jmlspecs.openjml.eclipse.crpKey"
          colorPreferenceValue="255,0,0"
          highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrpKey"
          highlightPreferenceValue="true"
          icon="icons/jml_problem.gif"
          includeOnPreferencePage="true"
          label="JML Error"
          overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orpKey"
          overviewRulerPreferenceValue="true"
          presentationLayer="3"
          textPreferenceKey="org.jmlspecs.openjml.eclipse.trpKey"
          textPreferenceValue="true"
          verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrpKey"
          verticalRulerPreferenceValue="true">
    </specification>
    <specification
          annotationType="org.jmlspecs.OpenJMLUI.JMLWarningAnnotation"
          colorPreferenceKey="org.jmlspecs.openjml.eclipse.crpwKey"
          colorPreferenceValue="255,255,0"
          highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrpwKey"
          highlightPreferenceValue="true"
          icon="icons/jml_warning.gif"
          includeOnPreferencePage="true"
          label="JML Warning"
          overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orpwKey"
          overviewRulerPreferenceValue="true"
          presentationLayer="3"
          textPreferenceKey="org.jmlspecs.openjml.eclipse.trpwKey"
          textPreferenceValue="true"
          verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrpwKey"
          verticalRulerPreferenceValue="true">
    </specification>
    <specification
          annotationType="org.jmlspecs.OpenJMLUI.JMLNoteAnnotation"
          colorPreferenceKey="org.jmlspecs.openjml.eclipse.crpnKey"
          colorPreferenceValue="0,0,255"
          highlightPreferenceKey="org.jmlspecs.openjml.eclipse.hrpnKey"
          highlightPreferenceValue="true"
          icon="icons/jml_blue.gif"
          includeOnPreferencePage="true"
          label="JML Note"
          overviewRulerPreferenceKey="org.jmlspecs.openjml.eclipse.orpnKey"
          overviewRulerPreferenceValue="true"
          presentationLayer="3"
          textPreferenceKey="org.jmlspecs.openjml.eclipse.trpnKey"
          textPreferenceValue="true"
          verticalRulerPreferenceKey="org.jmlspecs.openjml.eclipse.vrpnKey"
          verticalRulerPreferenceValue="true">
    </specification>
  </extension> 
 
 <!--  (TODO) This has to do with filters in the problems view - I have not tried it yet
    <extension point="org.eclipse.ui.ide.markerSupport">
  <problemFilter
    name = "Warnings"
    id = "org.eclipse.example.warningFilter"
    enabled = "true"
    scope="ON_SELECTED_AND_CHILDREN"
    onDescription="!NON-NLS"
    severity="WARNING"
  > 
  <selectedType
    markerId="org.jmlspecs.openjml.eclipse.JMLProblem"/>
  </problemFilter>
 </extension>
   --> 

<!-- The following creates commands that are referenced by
	actions above and can be mapped to keys -->      
	
  <extension
	point="org.eclipse.ui.commands">
      <category
            name="JML"
            description="JML related commands"
            id="org.jmlspecs.eclipse.JMLCommandCategory"
            >
      </category>
      <command
            name="Enable JML Auto Checking"
            description="Enables JML automatic checking during compilation"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.EnableJML"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$EnableJML"
            >
      </command> 
      <command
            name="Disable JML Auto Checking"
            description="Disables JML automatic checking during compilation"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.DisableJML"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$DisableJML"
            >
      </command>
      <command
            name="TypeCheck JML"
            description="Manually type-checks JML constructs in selected resources"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.CheckJML"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$CheckJML"
            >
      </command>
      <command
            name="Static Check (ESC)"
            description="Runs static checks on selected resources"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.CheckESC"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$CheckESC"
            >
      </command>
      <command
            name="RAC - compile"
            description="Compiles runtime checks on selected resources"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.RAC"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$RAC"
            >
      </command>
      <command
            name="RAC - enable file"
            description="Marks files to be compiled with RAC"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.EnableForRAC"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$EnableForRAC"
            >
      </command>
      <command
            name="RAC - disable file"
            description="Disables files from being compiled with RAC"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.DisableForRAC"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$DisableForRAC"
            >
      </command>
      <command
            name="RAC - delete all class files"
            description="Delete all RAC-compiled class files"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.ClearForRAC"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$ClearForRAC"
            >
      </command>
      <command
            name="Delete JML Markers"
            description="Deletes the JML markers in selected resources"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.DeleteJMLMarkers"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$DeleteJMLMarkers"
            >
      </command>
      <command
            name="Show JML Specifications"
            description="Show the specifications of selected resources in a popup"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.ShowSpecs"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$ShowSpecs"
            >
      </command>
      <command
            name="Show JML Proof Information"
            description="Show proof information for the specified method"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.ProofInformation"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$ProofInformation"
            >
      </command>
      <command
            name="Show Counterexample Value"
            description="Show value of expression in counterexample"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.ShowCounterexampleValue"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$ShowCounterexampleValue"
            >
      </command>
      <command
            name="Edit JML specs path"
            description="A wizard to edit the JML specifications directory path"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.EditSpecsPath"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$EditSpecsPath"
            >
      </command>
      <command
            name="Add to JML specs path"
            description="Adds a folder to the JML specifications directory path"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.AddToSpecsPath"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$AddToSpecsPath"
            >
      </command>
      <command
            name="Remove from JML specs path"
            description="Removes a folder from the JML specifications directory path"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.RemoveFromSpecsPath"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$RemoveFromSpecsPath"
            >
      </command>
      <command
            name="Show JML class path"
            description="Shows JML's class path"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.ClassPath"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$ClassPath"
            >
      </command>
      <command
            name="Generate JML doc"
            description="Generates javadoc pages containing JML information"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.JmlDoc"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$JmlDoc"
            >
      </command>
      <command
            name="Open a Specifications Editor"
            description="Opens an editor on the corresponding specifications file"
            categoryId="org.jmlspecs.eclipse.JMLCommandCategory"
            id="org.jmlspecs.eclipse.commands.SpecsEditor"
            defaultHandler="org.jmlspecs.openjml.eclipse.MenuActions$SpecsEditor"
            >
      </command>
  </extension>
  
   <!-- This extension adds help information.
   	-->
   <extension
         point="org.eclipse.help.toc">
      <toc file="html/JMLHelp.xml" primary="true" />
   </extension>
   
   <!-- file extensions - treats JML specs files as Java source and so use the
                Java editor -->
   
   <extension point="org.eclipse.core.contenttype.contentTypes"> 
      <file-association 
       content-type="org.eclipse.jdt.core.javaSource"
       file-extensions="jml"/>
   </extension>
   
   <!--  FIXME - this would define a new editor, but it is not implemented yet
   <extension
         point="org.eclipse.ui.editors">
      <editor
            class="org.jmlspecs.openjml.eclipse.JMLEditor"
            contributorClass="org.eclipse.ui.texteditor.BasicTextEditorActionContributor"
            extensions="jml,java"
            icon="icons/sample.gif"
            id="org.jmlspecs.openjml.eclipse.JMLEditor"
            name="JML/Java Editor"/>
   </extension>
   -->
   
<!-- TODO: RAC decorator, meant to indicate which files have RAC compiled in, but not implemented yet
    <extension point="org.eclipse.ui.decorators"> 
        <decorator
            id="org.jmlspecs.openjml.eclipse.racDecorator" 
            label="RAC" 
            state="false" 
            lightweight="true" 
            icon="icons/JMLSmall.png" 
            location="BOTTOM_RIGHT"> 
            <enablement>
                <and>
                <objectClass name="org.eclipse.core.resources.IFile"/>
                <objectState name="RAC" value="true"/>
                </and> 
            </enablement>
        </decorator>
    </extension>
    --> 
 
   
</plugin>
