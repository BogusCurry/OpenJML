Proving methods in openjml.demo.Paths
Starting proof of openjml.demo.Paths.Paths() with prover z3_4_3
Completed proof of openjml.demo.Paths.Paths() with prover z3_4_3 - no warnings
Starting proof of openjml.demo.Paths.clip(int,int,int) with prover z3_4_3

TRACE

			VALUE: null = REF!val!1
			VALUE: this = REF!val!0
..\OpenJMLDemo\src\openjml\demo\Paths.java:7:  	old boolean p1 = i < min;
			VALUE: i_359	 === 0
			VALUE: min_375	 === 1
			VALUE: i_359 < min_375	 === true
			VALUE: p1 = true
..\OpenJMLDemo\src\openjml\demo\Paths.java:9:  	requires p1; 
			VALUE: p1	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:7:  	old boolean p1 = i < min;
			VALUE: i_359	 === 0
			VALUE: min_375	 === 1
			VALUE: i_359 < min_375	 === true
			VALUE: p1 = true
..\OpenJMLDemo\src\openjml\demo\Paths.java:12:  	requires i > max; 
			VALUE: i	 === 0
			VALUE: max	 === ( - 1 )
			VALUE: i > max	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:7:  	old boolean p1 = i < min;
			VALUE: i_359	 === 0
			VALUE: min_375	 === 1
			VALUE: i_359 < min_375	 === true
			VALUE: p1 = true
..\OpenJMLDemo\src\openjml\demo\Paths.java:15:  	requires !p1 && i <= max; 
			VALUE: p1	 === true
			VALUE: !p1	 === false
			VALUE: !p1 && i <= max	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:19:  	if (i < min) ...
			VALUE: i	 === 0
			VALUE: min	 === 1
			VALUE: i < min	 === true
			VALUE: (i < min)	 === true
				Condition = true
..\OpenJMLDemo\src\openjml\demo\Paths.java:19:  	return min;
			VALUE: min	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:10:  	ensures \result == min; 
			VALUE: \result	 === 1
			VALUE: min	 === 1
			VALUE: \result == min	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:13:  	ensures \result == max; 
			VALUE: \result	 === 1
			VALUE: max	 === ( - 1 )
			VALUE: \result == max	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:19: warning: The prover cannot establish an assertion (Postcondition) in method clip
		if (i < min) return min;
		             ^
..\OpenJMLDemo\src\openjml\demo\Paths.java:13: warning: Associated declaration
	//@   ensures \result == max;
	      ^
Completed proof of openjml.demo.Paths.clip(int,int,int) with prover z3_4_3 - with warnings
Starting proof of openjml.demo.Paths.multipleErrors(int) with prover z3_4_3

TRACE

			VALUE: null = REF!val!1
			VALUE: this = REF!val!0
..\OpenJMLDemo\src\openjml\demo\Paths.java:25:  	if (i == 0) ...
			VALUE: i	 === ( - 1 )
			VALUE: 0	 === 0
			VALUE: i == 0	 === false
			VALUE: (i == 0)	 === false
				Condition = false
..\OpenJMLDemo\src\openjml\demo\Paths.java:28:  	assert Assert i > 0;
			VALUE: i	 === ( - 1 )
			VALUE: 0	 === 0
			VALUE: i > 0	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:28: warning: The prover cannot establish an assertion (Assert) in method multipleErrors
			//@ assert i > 0;
			    ^

TRACE

			VALUE: null = REF!val!1
			VALUE: this = REF!val!0
..\OpenJMLDemo\src\openjml\demo\Paths.java:25:  	if (i == 0) ...
			VALUE: i	 === 0
			VALUE: 0	 === 0
			VALUE: i == 0	 === true
			VALUE: (i == 0)	 === true
				Condition = true
..\OpenJMLDemo\src\openjml\demo\Paths.java:26:  	assert Assert i > 0;
			VALUE: i	 === 0
			VALUE: 0	 === 0
			VALUE: i > 0	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:26: warning: The prover cannot establish an assertion (Assert) in method multipleErrors
			//@ assert i > 0;
			    ^
Completed proof of openjml.demo.Paths.multipleErrors(int) with prover z3_4_3 - with warnings
Starting proof of openjml.demo.Paths.lotsOfPaths(int) with prover z3_4_3

TRACE

			VALUE: null = REF!val!1
			VALUE: this = REF!val!0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 1
			VALUE: (i)	 === 1
				Selection = 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	case 1:
			VALUE: 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	k = 1
			VALUE: 1	 === 1
			VALUE: k = 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	case 2:
			VALUE: 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	k = 2
			VALUE: 2	 === 2
			VALUE: k = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	case 3:
			VALUE: 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	k = 3
			VALUE: 3	 === 3
			VALUE: k = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 1
			VALUE: k	 === 3
			VALUE: i == k	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:40: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert i == k;
		    ^

TRACE

			VALUE: null = REF!val!1
			VALUE: this = REF!val!0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 2
			VALUE: (i)	 === 2
				Selection = 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	case 2:
			VALUE: 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	k = 2
			VALUE: 2	 === 2
			VALUE: k = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	case 3:
			VALUE: 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	k = 3
			VALUE: 3	 === 3
			VALUE: k = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 2
			VALUE: k	 === 3
			VALUE: i == k	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:40: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert i == k;
		    ^
Completed proof of openjml.demo.Paths.lotsOfPaths(int) with prover z3_4_3 - with warnings
Completed proving methods in openjml.demo.Paths
6 warnings
